@inject PlayerState PlayerState;
@implements IDisposable

<div style="width:100%; text-align:center; padding-top:10px">
    <h3>@PlayerState?.NowPlaying</h3>
    <button @onclick=@(async() => await Stop()) disabled=@(!PlayerState.IsPlaying)>Stop</button>
</div>

@code {
    protected override Task OnInitializedAsync()
    {
        PlayerState.PlayerStateChanged += Player_StateChanged;
        return base.OnInitializedAsync();
    }

    public async Task Stop() {
        await PlayerState.Stop();
    }

    private void Player_StateChanged(object sender, EventArgs e)
    {
        StateHasChanged();
    }

    public void Dispose()
    {
        PlayerState.PlayerStateChanged -= Player_StateChanged;
    }
}